info:
  contact: {}
paths:
  /message/id/:messageId:
    delete:
      consumes:
      - application/json
      description: deletes a message
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: deletes a message
      tags:
      - Message API
    get:
      consumes:
      - application/json
      description: deletes a message
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: get a message
      tags:
      - Message API
  /note/:path:
    delete:
      consumes:
      - application/json
      description: deletes a note based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: deletes a note
      tags:
      - Note API
    get:
      consumes:
      - application/json
      description: returns the content of a note based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: returns the content of a note
      tags:
      - Note API
    post:
      consumes:
      - application/json
      description: creates a note based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates a note
      tags:
      - Note API
  /room/:roomId/message:
    post:
      consumes:
      - application/json
      description: deletes a message
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: send a message to a given room
      tags:
      - Message API
      - Room API
  /server/ping:
    get:
      consumes:
      - application/json
      description: says hello to the server, used for overview page
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: ping the server, used for overview page
      tags:
      - Server API
  /user:
    post:
      description: creates a page based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates a page
      tags:
      - User API
  /user/:userId:
    delete:
      consumes:
      - application/json
      description: deletes a user based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: deletes a user
      tags:
      - User API
    get:
      description: creates a page based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates a page
      tags:
      - User API
    post:
      consumes:
      - application/json
      description: creates a page based on it's path
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: creates a page
      tags:
      - User API
  /webhook:
    get:
      consumes:
      - application/json
      description: returns information about a webhook
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: list all webhooks controlled by you
      tags:
      - Webhook API
    post:
      consumes:
      - application/json
      description: returns information about a webhook
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: create a new webhook, if 2FA is enabled it's required
      tags:
      - Webhook API
  /webhook/:webhookId:
    delete:
      consumes:
      - application/json
      description: returns information about a webhook
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: delete's a webhook, if 2FA is set to strict it's required
      tags:
      - Webhook API
    get:
      consumes:
      - application/json
      description: returns information about a webhook
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get's the details of a given webhook
      tags:
      - Webhook API
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: provided details overwrite the existing webhook
      tags:
      - Webhook API
swagger: "2.0"
